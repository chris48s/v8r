"use strict";(self.webpackChunkv8r_docs=self.webpackChunkv8r_docs||[]).push([[603],{4577:e=>{e.exports=JSON.parse('{"version":{"pluginId":"default","version":"current","label":"Next","banner":null,"badge":false,"noIndex":false,"className":"docs-version-current","isLast":true,"docsSidebars":{"docSidebar":[{"type":"link","label":"Introduction","href":"/v8r/","docId":"intro","unlisted":false},{"type":"link","label":"Usage Examples","href":"/v8r/usage-examples","docId":"usage-examples","unlisted":false},{"type":"link","label":"Configuration","href":"/v8r/configuration","docId":"configuration","unlisted":false},{"type":"link","label":"Ignore Patterns","href":"/v8r/ignoring-files","docId":"ignoring-files","unlisted":false},{"type":"link","label":"Configuring a Proxy","href":"/v8r/proxy","docId":"proxy","unlisted":false},{"type":"link","label":"Exit codes","href":"/v8r/exit-codes","docId":"exit-codes","unlisted":false},{"type":"category","label":"Plugins","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Using Plugins","href":"/v8r/plugins/using-plugins","docId":"plugins/using-plugins","unlisted":false},{"type":"link","label":"Writing Plugins","href":"/v8r/plugins/writing-plugins","docId":"plugins/writing-plugins","unlisted":false},{"type":"link","label":"Plugin API Reference","href":"/v8r/plugins/reference","docId":"plugins/reference","unlisted":false}],"href":"/v8r/category/plugins"},{"type":"link","label":"Versioning","href":"/v8r/semver","docId":"semver","unlisted":false},{"type":"link","label":"FAQ","href":"/v8r/faq","docId":"faq","unlisted":false}]},"docs":{"configuration":{"id":"configuration","title":"Configuration","description":"v8r uses CosmiConfig to search for a configuration. This means you can specify your configuration in any of the following places:","sidebar":"docSidebar"},"exit-codes":{"id":"exit-codes","title":"Exit codes","description":"v8r always exits with code 0 when:","sidebar":"docSidebar"},"faq":{"id":"faq","title":"FAQ","description":"\u2753 How does v8r decide what schema to validate against if I don\'t supply one?","sidebar":"docSidebar"},"ignoring-files":{"id":"ignoring-files","title":"Ignore Patterns","description":".v8rignore and .gitignore","sidebar":"docSidebar"},"intro":{"id":"intro","title":"Introduction","description":"v8r is a command-line validator that uses Schema Store to detect a suitable schema for your input files based on the filename.","sidebar":"docSidebar"},"plugins/reference":{"id":"plugins/reference","title":"Plugin API Reference","description":"v8r exports two classes: BasePlugin and Document.","sidebar":"docSidebar"},"plugins/using-plugins":{"id":"plugins/using-plugins","title":"Using Plugins","description":"It is possible to extend the functionality of v8r by installing plugins.","sidebar":"docSidebar"},"plugins/writing-plugins":{"id":"plugins/writing-plugins","title":"Writing Plugins","description":"We can extend the functionality of v8r by writing a plugin. A plugin can be a local file contained within your project or package published to a registry like npm or jsr.","sidebar":"docSidebar"},"proxy":{"id":"proxy","title":"Configuring a Proxy","description":"It is possible to configure a proxy via global-agent using the GLOBALAGENTHTTP_PROXY environment variable:","sidebar":"docSidebar"},"semver":{"id":"semver","title":"Versioning","description":"v8r follows semantic versioning. For this project, the \\"API\\" is defined as:","sidebar":"docSidebar"},"usage-examples":{"id":"usage-examples","title":"Usage Examples","description":"Validating files","sidebar":"docSidebar"}}}}')}}]);