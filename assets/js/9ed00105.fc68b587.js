"use strict";(self.webpackChunkvur_docs=self.webpackChunkvur_docs||[]).push([[873],{2163:(e,n,o)=>{o.r(n),o.d(n,{assets:()=>c,contentTitle:()=>a,default:()=>h,frontMatter:()=>s,metadata:()=>t,toc:()=>l});var i=o(4848),r=o(8453);const s={sidebar_position:3},a="Configuration",t={id:"configuration",title:"Configuration",description:"v8r uses CosmiConfig to search for a configuration. This means you can specify your configuration in any of the following places:",source:"@site/docs/configuration.md",sourceDirName:".",slug:"/configuration",permalink:"/v8r/configuration",draft:!1,unlisted:!1,editUrl:"https://github.com/chris48s/v8r/tree/main/docs/docs/configuration.md",tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3},sidebar:"docSidebar",previous:{title:"Usage Examples",permalink:"/v8r/usage-examples"},next:{title:"Configuring a Proxy",permalink:"/v8r/proxy"}},c={},l=[];function d(e){const n={a:"a",code:"code",h1:"h1",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,r.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"configuration",children:"Configuration"})}),"\n",(0,i.jsxs)(n.p,{children:["v8r uses ",(0,i.jsx)(n.a,{href:"https://www.npmjs.com/package/cosmiconfig",children:"CosmiConfig"})," to search for a configuration. This means you can specify your configuration in any of the following places:"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.code,{children:"package.json"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.code,{children:".v8rrc"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.code,{children:".v8rrc.json"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.code,{children:".v8rrc.yaml"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.code,{children:".v8rrc.yml"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.code,{children:".v8rrc.js"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.code,{children:".v8rrc.cjs"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.code,{children:"v8r.config.js"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.code,{children:"v8r.config.cjs"})}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"v8r only searches for a config file in the current working directory."}),"\n",(0,i.jsx)(n.p,{children:"Example yaml config file:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-yaml",metastring:'title=".v8rrc.yml"',children:'# - One or more filenames or glob patterns describing local file or files to validate\n# - overridden by passing one or more positional arguments\npatterns: [\'*json\']\n\n# - Level of verbose logging. 0 is standard, higher numbers are more verbose\n# - overridden by passing --verbose / -v\n# - default = 0\nverbose: 2\n\n# - Exit with code 0 even if an error was encountered. True means a non-zero exit\n#   code is only issued if validation could be completed successfully and one or\n#   more files were invalid\n# - overridden by passing --ignore-errors\n# - default = false\nignoreErrors: true\n\n# - Remove cached HTTP responses older than cacheTtl seconds old.\n#   Specifying 0 clears and disables cache completely\n# - overridden by passing --cache-ttl\n# - default = 600\ncacheTtl: 86400\n\n# - Output format for validation results\n# - overridden by passing --format\n# - default = text\nformat: "json"\n\n# - A custom schema catalog.\n#   This catalog will be searched ahead of any custom catalogs passed using\n#   --catalogs or SchemaStore.org\n#   The format of this is subtly different to the format of a catalog\n#   passed via --catalogs (which matches the SchemaStore.org format)\ncustomCatalog:\n    schemas:\n        - name: Custom Schema  # The name of the schema (required)\n          description: Custom Schema  # A description of the schema (optional)\n\n          # A Minimatch glob expression for matching up file names with a schema (required)\n          fileMatch: ["*.geojson"]\n\n          # A URL or local file path for the schema location (required)\n          # Unlike the SchemaStore.org format, which has a `url` key,\n          # custom catalogs defined in v8r config files have a `location` key\n          # which can refer to either a URL or local file.\n          # Relative paths are interpreted as relative to the config file location.\n          location: foo/bar/geojson-schema.json\n\n          # A custom parser to use for files matching fileMatch\n          # instead of trying to infer the correct parser from the filename (optional)\n          # This property is specific to custom catalogs defined in v8r config files\n          parser: json5\n\n# - An array of v8r plugins to load\n# - Plugins can only be specified in the config file.\n#   They can\'t be loaded using command line arguments\nplugins:\n    # Plugins installed from NPM (or JSR) must be prefixed by "package:"\n    - "package:v8r-plugin-emoji-output"\n    # Plugins in the project dir must be prefixed by "file:"\n    - "file:./subdir/my-local-plugin.mjs"\n'})}),"\n",(0,i.jsx)(n.p,{children:"The config file format is specified more formally in a JSON Schema:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"https://github.com/chris48s/v8r/blob/main/config-schema.json",children:"machine-readable JSON"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"https://json-schema-viewer.vercel.app/view?url=https%3A%2F%2Fraw.githubusercontent.com%2Fchris48s%2Fv8r%2Fmain%2Fconfig-schema.json&show_breadcrumbs=on&template_name=flat",children:"human-readable HTML"})}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},8453:(e,n,o)=>{o.d(n,{R:()=>a,x:()=>t});var i=o(6540);const r={},s=i.createContext(r);function a(e){const n=i.useContext(s);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function t(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:a(e.components),i.createElement(s.Provider,{value:n},e.children)}}}]);