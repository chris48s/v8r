"use strict";(self.webpackChunkv8r_docs=self.webpackChunkv8r_docs||[]).push([[180],{1634:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>u,contentTitle:()=>o,default:()=>h,frontMatter:()=>l,metadata:()=>t,toc:()=>a});const t=JSON.parse('{"id":"plugins/writing-plugins","title":"Writing Plugins","description":"We can extend the functionality of v8r by writing a plugin. A plugin can be a local file contained within your project or package published to a registry like npm or jsr.","source":"@site/docs/plugins/writing-plugins.md","sourceDirName":"plugins","slug":"/plugins/writing-plugins","permalink":"/v8r/plugins/writing-plugins","draft":false,"unlisted":false,"editUrl":"https://github.com/chris48s/v8r/tree/main/docs/docs/plugins/writing-plugins.md","tags":[],"version":"current","sidebarPosition":2,"frontMatter":{"sidebar_position":2},"sidebar":"docSidebar","previous":{"title":"Using Plugins","permalink":"/v8r/plugins/using-plugins"},"next":{"title":"Plugin API Reference","permalink":"/v8r/plugins/reference"}}');var s=i(4848),r=i(8453);const l={sidebar_position:2},o="Writing Plugins",u={},a=[{value:"Plugin Execution",id:"plugin-execution",level:2},{value:"Hook Types",id:"hook-types",level:2},{value:"Register Hooks",id:"register-hooks",level:3},{value:"Early Return Hooks",id:"early-return-hooks",level:3},{value:"Worked Example",id:"worked-example",level:2}];function c(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,r.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"writing-plugins",children:"Writing Plugins"})}),"\n",(0,s.jsxs)(n.p,{children:["We can extend the functionality of v8r by writing a plugin. A plugin can be a local file contained within your project or package published to a registry like ",(0,s.jsx)(n.a,{href:"https://www.npmjs.com/",children:"npm"})," or ",(0,s.jsx)(n.a,{href:"https://jsr.io/",children:"jsr"}),"."]}),"\n",(0,s.jsxs)(n.p,{children:["Plugins extend the ",(0,s.jsx)(n.a,{href:"../reference",children:"BasePlugin"})," class which exposes hooks that allow us customise the parsing of files and output of results. Internally, v8r's ",(0,s.jsx)(n.a,{href:"https://github.com/chris48s/v8r/tree/main/src/plugins",children:"core parsers and output formats"})," are implemented as plugins. You can use these as a reference."]}),"\n",(0,s.jsx)(n.h2,{id:"plugin-execution",children:"Plugin Execution"}),"\n",(0,s.jsx)(n.p,{children:"Plugins are invoked in the following sequence:"}),"\n",(0,s.jsx)(n.p,{children:"Plugins that the user has specified in the config file are run first. These are executed in the order they are specified in the config file."}),"\n",(0,s.jsx)(n.p,{children:"v8r's core plugins run second. The order of execution for core plugins is non-configurable."}),"\n",(0,s.jsx)(n.h2,{id:"hook-types",children:"Hook Types"}),"\n",(0,s.jsx)(n.p,{children:"There are two patterns used by v8r plugin hooks."}),"\n",(0,s.jsx)(n.h3,{id:"register-hooks",children:"Register Hooks"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"registerInputFileParsers"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"registerOutputFormats"})}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"These hooks return an array of strings. Any values returned by these hooks are added to the list of formats v8r can work with."}),"\n",(0,s.jsx)(n.h3,{id:"early-return-hooks",children:"Early Return Hooks"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"parseInputFile"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"getSingleResultLogMessage"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"getAllResultsLogMessage"})}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:'These hooks may optionally return or not return a value. Each plugin is run in sequence. The first plugin that returns a value "wins". That value will be used and no further plugins will be invoked. If a hook doesn\'t return anything, v8r will move on to the next plugin in the stack.'}),"\n",(0,s.jsx)(n.h2,{id:"worked-example",children:"Worked Example"}),"\n",(0,s.jsxs)(n.p,{children:['Lets build a simple example plugin. Our plugin is going to register an output format called "emoji". If the user passes ',(0,s.jsx)(n.code,{children:"--format emoji"})," (or sets ",(0,s.jsx)(n.code,{children:"format: emoji"})," in their config file) the plugin will output a \ud83d\udc4d when the file is valid and a \ud83d\udc4e when the file is invalid instead of the default text log message."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-js",metastring:'title="./plugins/v8r-plugin-emoji-output.js"',children:'// Our plugin extends the BasePlugin class\nimport { BasePlugin } from "v8r";\n\nclass EmojiOutput extends BasePlugin {\n\n  // v8r plugins must declare a name starting with "v8r-plugin-"\n  static name = "v8r-plugin-emoji-output";\n\n  registerOutputFormats() {\n    /*\n    Registering "emoji" as an output format here adds "emoji" to the list\n    of values the user may pass to the --format argument.\n    We could register multiple output formats here if we want,\n    but we\'re just going to register one.\n    */\n    return ["emoji"];\n  }\n\n  /*\n  We\'re going to implement the getSingleResultLogMessage hook here. This\n  allows us to optionally return a log message to be written to stdout\n  after each file is validated.\n  */\n  getSingleResultLogMessage(result, filename, format) {\n    /*\n    Check if the user has requested "emoji" output.\n    If the user hasn\'t requested emoji output, we don\'t want to return a value.\n    That will allow v8r to hand over to the next plugin in the sequence\n    to check for other output formats.\n    */\n    if (format === "emoji") {\n      // Implement our plugin logic\n      if (result.valid === true) {\n        return "\ud83d\udc4d";\n      }\n      return "\ud83d\udc4e";\n    }\n  }\n}\n\n// Our plugin must be an ESM module\n// and the plugin class must be the default export\nexport default EmojiOutput;\n'})}),"\n",(0,s.jsx)(n.p,{children:"We can now register the plugin in our config file:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yaml",metastring:'title=".v8rrc.yml"',children:'plugins:\n    - "file:./plugins/v8r-plugin-emoji-output.js"\n'})})]})}function h(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(c,{...e})}):c(e)}},8453:(e,n,i)=>{i.d(n,{R:()=>l,x:()=>o});var t=i(6540);const s={},r=t.createContext(s);function l(e){const n=t.useContext(r);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:l(e.components),t.createElement(r.Provider,{value:n},e.children)}}}]);